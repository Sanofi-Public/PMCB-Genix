% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Core.R
\name{compareNets}
\alias{compareNets}
\title{Compares topological characteristics of two graphs}
\usage{
compareNets(grph.1, grph.2, n.perm = 1000)
}
\arguments{
\item{grph.1}{A \code{compiledObj} object.}

\item{grph.2}{A \code{compiledObj} object.}

\item{n.perm}{An integer. Number of times to perform permutation
test between two graphs.}
}
\value{
a \link{comparedObj}.
}
\description{
identifies the variations in topological features of two graphs
}
\details{
\code{compareNets} calculates the normalized values of degree,
  closeness, and betweenness for each gene in two graphs, grph.1 and grph.2. 
  It then substrates the calculated topological characteristics to report deltas.
  Positive values indicate that the feature is larger in the grph.2. 
  
  The function also calculates the similarity between grph.1 and grph.2 using the
  Jaccard index, considering both shared genes and edges. It then performs an
  iterative gene removal process in both graphs. With each gene removal, 
  the similarity index between graphs is recalculated. The gene removal impact 
  for each gene is then calculated as the relative difference in post-removal
  graph similarity compared to the pre-removal.
  
  A permutation test is also developed to examine the statistical distinctiveness
  of the graph.1 and graph.2. First, the two graphs are combined (union) into a
  pull. Next, graph.1 and graph.2 are reconstructed by randomly sampling from
  the pull, while preserving the original edge counts and connections, with
  no-replacement. A distribution of jaccard similarities is generated
  (n=\code{n.perm}). This distribution is utilized to calculate a two-sided
  t-test p-value, reflecting the proportion of permuted statistics that
  differ from the observed jaccard index between graph.1 and graph.2.
}
\examples{
\dontrun{
  # first run \link{compileNets} example and pass the \code{cmpl_rslts}
  cmpr_rslts <- compareNets(grph.1=cmpl_rslts$grp1, grph.2=cmpl_rslts$grp2, 
                            n.perm=25)
}

}
\seealso{
\link{constructNets} to construct a network.
          \link{compiledObj} for a \link{compileNets} output.
}
