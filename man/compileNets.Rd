% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Core.R
\name{compileNets}
\alias{compileNets}
\title{Compiles a gene association network inferred by \link{constructNets}}
\usage{
compileNets(grph, degree.th = NULL, hubs.th = NULL, ...)
}
\arguments{
\item{grph}{A \link{genixObj} object.}

\item{degree.th}{A numeric value. Genes with connectivity below \code{degree.th} 
will be removed from the graph.}

\item{hubs.th}{A numeric value. Genes that are connected to 
at least \code{hubs.th} fraction of other genes
will be considered for hub detection.}

\item{...}{Additional arguments to be passed to 
\code{cutreeDynamicTree}. Otherwise, default values 
from the \code{cutreeDynamicTree} function are used.}
}
\value{
a \link{compiledObj}. It can be a list of \code{compiledObj}s, 
          if the \code{grph} contains a list \link{genixObj}s.
}
\description{
identifies modules and hub genes
}
\details{
\code{compileNets} processes the input graphs. First, it filters out
         genes with connectivity lower than \code{degree.th}. The filtered graphs 
         then undergo hub gene identification. A gene is considered a hub if it 
         exhibits an outlier level of connectivity and is connected to more than 
         \code{hubs.th} (fraction) of the genes in the graph. An outlier is defined as a gene 
         with a degree exceeding at least 1.5 interquartile ranges above the 75th 
         percentile of all degrees. Finally, the adjacency matrix calculated from 
         the graph is retrieved to identify modules using the 
         \code{cutreeDynamicTree} function.
}
\examples{
\dontrun{
  # first run \link{constructNets} function example and pass the \code{rslts}
  cmpl_rslts <- compileNets(grph=rslts, degree.th=3, hubs.th=0.01, 
                            minModuleSize=7, deepSplit=TRUE)
}

}
\seealso{
\link{constructNets} to construct a network. 
          \link{compiledObj} for a \code{compileNets} output. 
          \code{dynamicTreeCut} package for details about 
           \code{cutreeDynamicTree} algorithm.
}
